@page "/Counter/{ClienteId:int}"
@using Tarea3.DAL
@using Tarea3.Data
@using Tarea3.BLL
<h1>Counter</h1>


    <EditForm Model="@Cliente" OnInvalidSubmit="Guardar">
        <DataAnnotationsValidator />

        <div class="form-group col-md-4">
            <label for="Nombres">Nombres</label>
            <InputText Id="Nombres" @bind-Value="@Cliente.Nombres" class="form-control" ></InputText>

        </div>

        <div class="form-group col-md-4">
            <label for="Cedula">Cedula</label>
            <InputText Id="Cedula" @bind-Value="@Cliente.Cedula" class="form-control" ></InputText>
        </div>

        <div class="form-group col-md-4">
            <label for="Email">Email</label>
            <InputText Id="Email" @bind-Value="@Cliente.Email" class="form-control" ></InputText>
        </div>

        <div class="form-group col-md-4">
            <label for="Telefono">Telefono</label>
            <InputText Id="Telefono" @bind-Value="@Cliente.Telefono" class="form-control" ></InputText>
        </div>

        <div class="form-group col-md-4">
            <label for="Ciudad">Ciudad</label>
            <InputText Id="Ciudad" @bind-Value="@Cliente.Ciudad" class="form-control" ></InputText>
        </div>

        <div class="form-group col-md-4">
            <label for="Nacimiento">Año de Nacimiento</label>
            <InputDate Id="Nacimiento" @bind-Value="@Cliente.Nacimiento" class="form-control" />
        </div>

        <ValidationSummary />
        <div class="form-group col-md-4">
            <button type="submit" class="btn btn-primary ">SAVE</button>
        </div>


    </EditForm>


    @code {

        Clientes Cliente = new Clientes();

        [Parameter]
        public int ClienteId { get; set; }

        protected override void OnInitialized()
    {

        Cliente = new Clientes();

        if (ClienteId > 0)
        {
            Buscar();
        }

    }

    private void Buscar()
    {
        try
        {
            RepositorioBase<Clientes> db = new RepositorioBase<Clientes>();

            Cliente = db.Buscar(ClienteId);


        }
        catch (Exception) {  }
    }

        private void Limpiar()
        {
            Cliente = new Clientes();
            Cliente.Nombres = string.Empty;
            Cliente.Cedula = string.Empty;
            Cliente.Telefono = string.Empty;
            Cliente.Ciudad = string.Empty;
            Cliente.Email = string.Empty;
        }
        private void Guardar()
        {
            RepositorioBase<Clientes> db = new RepositorioBase<Clientes>();
            try
            {


                if (ClienteId == 0)
                {
                    if (db.Guardar(Cliente))
                    {
                        Cliente = new Clientes();
                        Limpiar();

                    }
                    else
                    {
                        // mensage de error aqui
                    }
                }
                else
                {
                    Cliente.ClientesId = ClienteId;
                    if (db.Modificar(Cliente))
                    {
                        Cliente = new Clientes();
                            Limpiar();
                    }
                    else
                    {
                        // Mensage de error
                    }
                }
            }
            catch (Exception) { }

        }
    }
